import logging
import asyncio
import nest_asyncio

# --- ØªØºÛŒÛŒØ± Ø§ØµÙ„ÛŒ Ø§ÛŒÙ†Ø¬Ø§Ø³Øª: ØªÙ†Ø¸ÛŒÙ…Ø§Øª Ù„Ø§Ú¯â€ŒÚ¯ÛŒØ±ÛŒ Ø¯Ø± Ø¨Ø§Ù„Ø§ØªØ±ÛŒÙ† Ø³Ø·Ø­ Ø¨Ø±Ù†Ø§Ù…Ù‡ ---
# Ø§ÛŒÙ† Ú©Ø§Ø± ØªØ¶Ù…ÛŒÙ† Ù…ÛŒâ€ŒÚ©Ù†Ø¯ Ú©Ù‡ ØªÙ…Ø§Ù… Ù„Ø§Ú¯â€ŒÙ‡Ø§ÛŒ Ù…Ø§ Ø¯Ø± Ø®Ø±ÙˆØ¬ÛŒ Colab Ù†Ù…Ø§ÛŒØ´ Ø¯Ø§Ø¯Ù‡ Ø´ÙˆÙ†Ø¯.
#logging.basicConfig(
#    level=logging.INFO,
#    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
#    datefmt='%Y-%m-%d %H:%M:%S'
#)
# --- Ù¾Ø§ÛŒØ§Ù† ØªØºÛŒÛŒØ± ---

# Ø§Ø¹Ù…Ø§Ù„ Ù¾Ú† Ø¨Ø±Ø§ÛŒ Ù…Ø­ÛŒØ·â€ŒÙ‡Ø§ÛŒÛŒ Ù…Ø§Ù†Ù†Ø¯ Colab Ú©Ù‡ event loop Ø¯Ø± Ø­Ø§Ù„ Ø§Ø¬Ø±Ø§ Ø¯Ø§Ø±Ù†Ø¯
nest_asyncio.apply()

from bot import main as start_bot

def main():
    """Initializes and runs the bot."""
    logging.info("ðŸ¤– Ø´Ø±ÙˆØ¹ Ø¨Ù‡ Ú©Ø§Ø± Ø¯Ø³ØªÛŒØ§Ø± Ù…ØºØ² Ø¯ÙˆÙ… (Ø³Ø§Ø®ØªØ§Ø± Ù…Ø§Ú˜ÙˆÙ„Ø§Ø±)...")
    try:
        start_bot()
    except Exception as e:
        logging.critical(f"ÛŒÚ© Ø®Ø·Ø§ÛŒ Ù…Ø±Ú¯Ø¨Ø§Ø± Ø¯Ø± Ø§Ø¬Ø±Ø§ÛŒ Ø¨Ø±Ù†Ø§Ù…Ù‡ Ø±Ø® Ø¯Ø§Ø¯: {e}", exc_info=True)

if __name__ == "__main__":
    main()
